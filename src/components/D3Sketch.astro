<!-- filename: "P5Sketch.astro" -->
---
export interface Props {
  src: string;
  id: string;
}

const { src, id } = Astro.props;
const scripts = import.meta.glob('/content/**/*.js', { query: '?raw', import: 'default' });
const scriptPath = `/content/${src}`;
const scriptContent = scripts[scriptPath] ? await scripts[scriptPath]() : '';
---
<div id={id}></div>
<!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.min.js" crossorigin="anonymous"></script> -->

<!-- this allows p5.js to import as a modern es module, later i can try
to get it to work with vite or somethhing like that -->
<script type="module" define:vars={{ scriptContent }}>
  import * as d3 from 'https://cdn.jsdelivr.net/npm/d3@7.9.0/+esm';

  // Attach D3 to the global window object
  // In browsers, `window` is the global scope.
  // This makes D3 accessible to scripts that run outside of this module,
  // such as dynamically injected scripts like `d3test.js`.
  window.d3 = d3;
  // this timeout is a big deal, d3 won't work if it loads too soon ahead of the DOM being ready
  setTimeout(() => {
    // execture the d3 script
    eval(scriptContent);
  }, 0);
</script>